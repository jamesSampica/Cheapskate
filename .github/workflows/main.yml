# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
      id-token: write
      contents: read

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
  
      - name: Az CLI login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Check account
        uses: azure/CLI@v2
        with:
          inlineScript: |
            az account show

      - name: Create stack 1
        uses: azure/CLI@v2
        if: true
        with:
          inlineScript: |
            az stack group create \
            --name stack1 \
            --resource-group test1 \
            --template-file main.bicep \
            --deny-settings-mode 'none'

      - name: Create stack 2
        uses: azure/CLI@v2
        if: true
        with:
          inlineScript: |
            az stack group create \
            --name stack2 \
            --resource-group test2 \
            --template-file main.bicep \
            --deny-settings-mode 'none'

      - name: Delete stacks
        shell: pwsh
        run: |
          # Get all the resource groups
          $rgs = az group list --query "[].name" | ConvertFrom-Json

          # Filter out the resource groups that we don't want to delete
          $excluded = @("test1")
          $rgs = $rgs | Where-Object { $_ -NotIn $excluded }

          # Get stacks in each resource group and delete them
          $stacks = $rgs | ForEach-Object {
            $rg = $_
            az stack group list --query "[].name" -g $rg | ConvertFrom-Json | ForEach-Object {
              Write-Host "Deleting Stack ${_} from ${rg}"
              az stack group delete --name $_ --resource-group $rg --delete-resources --yes
            }
          }

